* AMQP
** Advanced Message Queuing Protocol
** 组成部分
   - Producers
   - Broker
   - Consumers
** 好处
   消息解耦, 良好的可扩展性

* RabbitMQ组件

  [[file:./img/exchanges-bidings-routing-keys.png]]
  [[file:./img/exchanges-topic-fanout-direct.png]]

* 场景
** 单收(Direct)
** 所有的都收(Fanout)
** 指定那些人收(Topic)
** 如何确保消息被消费成功(ACK)

   https://www.cloudamqp.com/blog/2015-09-03-part4-rabbitmq-for-beginners-exchanges-routing-keys-bindings.html

   https://www.cnblogs.com/luxiaoxun/p/3918054.html
  
* 死信队列实现超时未支付订单处理

  https://www.codetd.com/article/9845211

  注意: 仅是针对未支付订单的处理, 订单支付(例如微信支付之类)成功后应该会向你的APP发送POST消息, 应该及时处理这个消息, 刷新订单状态.

** 这个场景也可使用Redis来实现

   https://www.jianshu.com/p/f5f81b2b2005

